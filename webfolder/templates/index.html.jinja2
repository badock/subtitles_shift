{% extends "layout.html.jinja2" %}

{% block body %}
<div class="container col-xxl-8 px-4" style="margin-top: 15px;">
    <div class="row flex-lg-row-reverse align-items-center g-5">
        <div class="col-10 col-sm-8 col-lg-6">
            <img src="{{ url_for("static", filename="img/img_watching_movie_sofa.png") }}"
                 class="d-block mx-lg-auto img-fluid" alt="Bootstrap Themes" loading="lazy" style="padding: 5px;"
                 width="700" height="500">
        </div>
        <div class="col-lg-6">
            <h1 class="display-5 fw-bold lh-1 mb-3">Ensure subtitles are in sync with the movie!</h1>
            <p class="lead">Shiftsubs enables to sync subtitles files with the audio of a movie.</p>
            <p class="lead">All you have to do is to upload a subtitle file, select a positive or negative delay, and
                download the resynchronized subtitles!</p>
        </div>
    </div>
</div>


<div class="container col-xxl-8 px-4">
    <div class="row flex-lg-row-reverse align-items-center g-5 py-5">
        <ul class="nav nav-tabs">
            <li class="nav-item">
                <a class="nav-link active" data-bs-toggle="tab" href="#step1">Step 1</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" data-bs-toggle="tab" href="#step2">Step2</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" data-bs-toggle="tab" href="#result">Result</a>
            </li>
        </ul>
        <div id="myTabContent" class="tab-content" style="margin-top: 10px;">
            <div class="tab-pane fade active show" id="step1">
                <form accept-charset="utf-8">
                    <fieldset>
                        <legend>
                            Insert the subtitles below (you can drag and drop a file):
                        </legend>
                        <div class="form-group">
                            <textarea class="form-control" id="inputTextarea" rows="10" accept-charset="UTF-8"
                                      autocomplete="off" onchange="asyncProcessSubtitles()"></textarea>
                        </div>
                    </fieldset>
                </form>
            </div>
            <div class="tab-pane fade" id="step2">
                <form accept-charset="utf-8">
                    <fieldset class="form-group">
                        <legend>Select how much you want to shift the subtitles:</legend>
                        <div style="width: 100%; text-align: center; font-size: 2em;">|</div>
                        <input id="rangeInput" type="range" class="form-range" id="customRange1" min="-15.0" max="15.0"
                               value="0.0" step="0.1" oninput="updateDelayValueRange(event)" autocomplete="off"
                               style="position: relative; top: -35px;">
                        <label class="form-label"> or enter directly the value below (ex: +3.1, -1.9) in seconds</label>
                        <input id="textInput" type="text" class="form-control" onchange="updateDelayValueText(event)"
                               value="+0.0" autocomplete="off">
                    </fieldset>
                </form>

                <div class="alert alert-dismissible alert-warning">
                  <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                  <h4 class="alert-heading">Help! I don't know how much I should shift the subtitles</h4>
                  <p class="mb-0">Don't worry, check the <a  href="{{ url_for("web_blueprint.help") }}">Help page</a>.</p>
                </div>

            </div>
            <div class="tab-pane fade" id="result">
                <form accept-charset="utf-8">
                    <fieldset>
                        <div class="form-group">
                            <legend>Get your new subtitle file
                                <button type="button" class="btn btn-sm btn-outline-success" onclick="downloadFile()">
                                    Download
                                </button>
                            </legend>
                            <textarea class="form-control" id="outputTextarea" rows="10" accept-charset="UTF-8"
                                      autocomplete="off"></textarea>
                        </div>
                    </fieldset>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    // The following comes from https://jsfiddle.net/gellermann/cgd7wmjz/
    var MAX_BYTES = 409600; // 100 KB
    let filename = "subtitles.srt";

    function dragEnter(event) {
        console.log('dragEnter', event);
        event.stopPropagation();
        event.preventDefault();
    }

    function dragExit(event) {
        console.log('dragExit', event);
        event.stopPropagation();
        event.preventDefault();
    }

    function dragOver(event) {
        console.log('dragOver', event);
        event.stopPropagation();
        event.preventDefault();
    }

    function drop(event) {

        console.log('drop', event);
        event.stopPropagation();
        event.preventDefault();

        var data = event.dataTransfer;
        var files = data.files;
        var file;
        var reader;

        for (var i = 0; i < files.length; i++) {
            file = files[i];
            {#console.log(file, file.fileName);#}
            filename = file.name;
            {#$('#result').attr('name', file.fileName);#}
            reader = new FileReader();
            reader.onloadend = onFileLoaded;
            reader.readAsText(file, "UTF-8");
        }
    }

    function onFileLoaded(event) {
        console.log('onFileLoaded', event);
        var initialData = event.currentTarget.result.substr(0, MAX_BYTES);

        let encodingDetection = jschardet.detect(initialData);
        console.log(encodingDetection);

        $('#inputTextarea').text(initialData);
        processSubtitles();
    }

    var dropArea = $("#inputTextarea").get(0);

    dropArea.addEventListener("dragenter", dragEnter, false);
    dropArea.addEventListener("dragexit", dragExit, false);
    dropArea.addEventListener("dragover", dragOver, false);
    dropArea.addEventListener("drop", drop, false);

    function updateDelayValueText(event) {
        $("#rangeInput")[0].value = event.target.value;
        asyncProcessSubtitles();
        console.log(event);
    }

    function updateDelayValueRange(event) {
        if (event.target.value >= 0.0) {
            $("#textInput")[0].value = `+${event.target.value}`;
        } else {
            $("#textInput")[0].value = event.target.value;
        }
        asyncProcessSubtitles();
        console.log(event);
    }

    function asyncProcessSubtitles() {
        let value = $("#textInput")[0].value;
        setTimeout(() => {
            let valueLater = $("#textInput")[0].value;

            if (value == valueLater) {
                processSubtitles();
            }
        }, 150);
    }

    function processSubtitles() {
        let delayValue = $("#rangeInput")[0].value;
        let subtitlesText = $('#inputTextarea').text();

        if (subtitlesText === "") {
            subtitlesText = $("#inputTextarea")[0].value;
        }

        $.post("{{ url_for("web_blueprint.process_subtitles") }}", {
            delayValue: delayValue,
            subtitlesText: subtitlesText
        }, function (data) {
            $('#outputTextarea').text(data["result"]);
        });

    }

    function download(filename, text) {
        var element = document.createElement('a');
        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
        element.setAttribute('download', filename);

        element.style.display = 'none';
        document.body.appendChild(element);

        element.click();

        document.body.removeChild(element);
    }

    function downloadFile() {
        let text = $('#outputTextarea').text();
        download(filename, text);
    }
</script>
{% endblock %}
